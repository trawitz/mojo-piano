// wave_arbiter decides which key gets what wave generator of the available generators.
// wave_arbiter actually only checks one key per clock and increments to the next key.
// For example if keys_pressed = b00000101 and assuming the current index is 0, then key 0
// will be assigned to the wave generator 0 and on the next clock cycle we will look at key 1.
// Key 1 is not set so everything remains as is and we increment the index.  Key 2 is set
// so this key will be assigned wave generator 1.  When the keys become reset the wave generator
// will be disabled and can be chosen again for another key.
module wave_arbiter (
    input clk,  // clock
    input rst,  // reset
    input keys_pressed[8],
    output note_to_wavegen_valid[4],
    output wave_gen_valids[4],
    output note_index[3],
    output keys_playing[8]
  ) {
  
  const UNASSIGNED_WAVEGEN_IDX = 3b100;
  
  .clk(clk), .rst(rst)
  {
    dff wave_gens_in_use[4];
    dff keys_pressed_handled[8];
    dff key_index[3];
    dff keys_assigned_wavegen_idx[8][3](#INIT(8x{UNASSIGNED_WAVEGEN_IDX}));
    dff note_valid[4];
    dff note_index_val[3];
  }
  
  always
  {
    // Just increment the key index
    key_index.d = key_index.q + 1;
    
    note_valid.d = 0;
    
    // If the current key we are looking at has not been handled and not all of the wave gens are in use.
    if(keys_pressed[key_index.q] & ~keys_pressed_handled.q[key_index.q] & ~&wave_gens_in_use.q)
    {
      if(~wave_gens_in_use.q[0])
      {
        wave_gens_in_use.d[0] = 1;
        keys_assigned_wavegen_idx.d[key_index.q] = 0;
        note_valid.d = 4b0001;
        keys_pressed_handled.d[key_index.q] = 1;
      }
      else if(~wave_gens_in_use.q[1])
      {
        wave_gens_in_use.d[1] = 1;
        keys_assigned_wavegen_idx.d[key_index.q] = 1;
        note_valid.d = 4b0010;
        keys_pressed_handled.d[key_index.q] = 1;
      }
      else if(~wave_gens_in_use.q[2])
      {
        wave_gens_in_use.d[2] = 1;
        keys_assigned_wavegen_idx.d[key_index.q] = 2;
        note_valid.d = 4b0100;
        keys_pressed_handled.d[key_index.q] = 1;
      }
      else if(~wave_gens_in_use.q[3])
      {
        wave_gens_in_use.d[3] = 1;
        keys_assigned_wavegen_idx.d[key_index.q] = 3;
        note_valid.d = 4b1000;
        keys_pressed_handled.d[key_index.q] = 1;
      }
      
      note_index_val.d = key_index.q;
    }
    
    if(~keys_pressed[key_index.q] & keys_pressed_handled.q[key_index.q])
    {
      // For some reason there is a possibility that keys_assigned_wavegen_idx is UNASSIGNED_WAVEGEN_IDX when we reach this point so as a fail safe, just kill everything
      if(keys_assigned_wavegen_idx.q[key_index.q] == UNASSIGNED_WAVEGEN_IDX)
      {
        wave_gens_in_use.d = 0;
        keys_pressed_handled.d = 0;
      }
      else
      {
        wave_gens_in_use.d[keys_assigned_wavegen_idx.q[key_index.q]] = 0;
      }
      keys_pressed_handled.d[key_index.q] = 0;
      keys_assigned_wavegen_idx.d[key_index.q] = UNASSIGNED_WAVEGEN_IDX;
    }
    
    note_index = note_index_val.q;
    note_to_wavegen_valid = note_valid.q;
    wave_gen_valids = wave_gens_in_use.q;
    
    keys_playing = keys_pressed_handled.q;
  }
}
